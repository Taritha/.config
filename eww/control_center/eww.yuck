;; for notifications
(deflisten control-center-cards "scripts/logger.zsh subscribe")
(defpoll control-center-critical :interval "1s" "scripts/logger.zsh crits")

;; for controls and tray
(defvar net-toggle "scripts/wifi.sh --toggle" )
(defpoll net-status :interval "1s" "scripts/wifi.sh --status")
(defvar comp-toggle "scripts/composition.sh")
(defpoll comp :interval "1s" "[ $(pidof picom) ] && echo '' || echo ''")
(defvar bluetooth-toggle "scripts/bluetooth_status.sh --toggle")
(defpoll bluetooth-status :interval "1s" "scripts/bluetooth_status.sh --status")
(defpoll bluetooth-icon :interval "1s" "scripts/bluetooth_status.sh --icon")
(defvar dunst-toggle "scripts/dunst.sh --toggle")
(defpoll dunst-status :interval "1s" "scripts/dunst.sh --status")
(defvar redshift-toggle "/home/taritha/.config/eww/control_center/scripts/nightmode.sh")
(defpoll redshift :interval "1s" "[ $(pidof redshift) ] && echo 'ﯦ' || echo ''")

;; for sliders
(defpoll volume :interval "1s" "~/.config/eww/control_center/scripts/get_vol.sh")
(defpoll volume-slider-indicator :interval "0.05s" "scripts/volume_slider.sh")
(defpoll mic :interval "1s" "~/.config/eww/control_center/scripts/micvol.sh")
(defpoll mic-slider-indicator :interval "0.05s" "scripts/get_mic.sh")


(defwidget control-center[]
  (box :orientation "vertical"
    :space-evenly false
    (box :space-evenly false
      :class "control-center-headers"
      :hexpand true
      
      (label :text "Notifications"
        :class "control-center-headers-label"
        :halign "start"
      :hexpand true)
      (button :onclick "scripts/logger.zsh clear"
        :class "control-center-headers-clear"
        :halign "end"
      ""))
    
    (literal :content control-center-cards)
    (tray))
)


(defwidget card [?class summary body glyph ?glyph_class ?SL ?M ?L ?R ?d_body]
  (eventbox :onmiddleclick M
    :onclick L
    :onrightclick R
    :class "control-center-card-eventbox"
    (box :space-evenly false
      (label :class "control-center-glyph ${glyph_class}"
      :text glyph)
      
      (box :orientation "vertical"
        :class class
        :space-evenly false
        :class "control-center-card-box"
        
        (box :space-evenly false
          (label :limit-width 25
            :wrap true
            :text summary
            :class "control-center-summary"
            :halign "start"
          :hexpand true)
          (button :onclick "scripts/logger.zsh rm_id ${SL}"
            :class "control-center-card-notify-close"
            :halign "end"
            (label :text "窱")))
        
        (label :text "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
          :class "control-center-separator"
        :halign "center")
        (label :class "control-center-bodytext ${d_body}"
          :text d_body
          :wrap true
          :halign "end"
        )
        (label :limit-width 40
          :halign "start"
          :wrap true
          :text body
        :class "control-center-body"))
        )
    )
)


(defwidget tray []
  (box :class "control-center-tray" :height 270
    (box :orientation "v" :space-evenly "false"
      (box :class "control-center-buttons" :orientation "h"
        (button :tooltip "Toggle network [Wi-Fi]" :class "net-status-button ${net-status == "直" ? "net-status-on" : "net-status-off"}" :onclick net-toggle net-status)
        (button :tooltip "Toggle compositor" :class "comp-status-button ${comp == "" ? "comp-status-on" : "comp-status-off"}" :onclick comp-toggle comp)
        (button :tooltip "Toggle bluetooth" :class "bluetooth-status-button ${bluetooth-status == "" ? "bluetooth-status-on" : "bluetooth-status-off"}" :onclick bluetooth-toggle bluetooth-icon)
        (button :tooltip "Toggle do not disturb" :class "dunst-status-button ${dunst-status == "" ? "dunst-status-on" : "dunst-status-off"}" :onclick dunst-toggle dunst-status)
        (button :tooltip "Toggle night light" :class "redshift-status-button ${redshift == "ﯦ" ? "redshift-status-on" : "redshift-status-off"}" :onclick redshift-toggle redshift))
      (box :orientation "h" :class "volume-slider-stuff" :space-evenly "false"
        (button :tooltip "Toggle sound" :onclick "pamixer -t" :class "volume-slider-icon" "${volume-slider-indicator}")
        (scale :class "volume-slider"
                :value volume
                :orientation "h"
                :width 370
                :active true
                :max 101
                :min 0
                :onchange "~/.config/eww/indicators/scripts/change_vol.sh {}"))
      (box :orientation "h" :class "mic-slider-stuff" :space-evenly "false"
        (button :tooltip "Toggle microphone" :onclick "~/.config/eww/control_center/scripts/mic.sh --toggle" :class "mic-slider-icon" "${mic-slider-indicator}")
        (scale :class "mic-slider"
                :value mic
                :orientation "h"
                :width 370
                :active true
                :max 101
                :min 0
                :onchange "~/.config/eww/control_center/scripts/change_mic.sh {}"
                )
              )
            )
          )
        )


(defwindow control-center :stacking "fg"
  :windowtype "normal"
  :wm-ignore true
  :monitor 0
  :geometry (geometry :width 515 :height "92%" :y "4%" :x 12)
  (control-center))